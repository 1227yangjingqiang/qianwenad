<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianwenad.storage.refund.RefundRepository" >
  <resultMap id="BaseResultMap" type="com.qianwenad.model.refund.Refund" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_sn" property="orderSn" jdbcType="VARCHAR" />
    <result column="shipping_amount" property="shippingAmount" jdbcType="BIGINT" />
    <result column="sub_total" property="subTotal" jdbcType="VARCHAR" />
    <result column="discount_amount" property="discountAmount" jdbcType="VARCHAR" />
    <result column="discount_desc" property="discountDesc" jdbcType="INTEGER" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="pay_method" property="payMethod" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pay_channel" property="payChannel" jdbcType="VARCHAR" />
    <result column="brand_id" property="brandId" jdbcType="BIGINT" />
    <result column="sale_channel" property="saleChannel" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

 <sql id="Base_Column_List" >
   `id`,
   `order_sn`,
   `shipping_amount`,
   `sub_total`,
   `discount_amount`,
   `discount_desc`,
   `refund_reason`,
   `pay_method`,
   `status`,
   `pay_channel`,
   `brand_id`,
   `sale_channel`,
   `create_time`,
   `update_time`
 </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from qw_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from qw_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.qianwenad.model.refund.Refund" >
    insert into qw_refund ( 
     `id`,
     `order_sn`,
     `shipping_amount`,
     `sub_total`,
     `discount_amount`,
     `discount_desc`,
     `refund_reason`,
     `pay_method`,
     `status`,
     `pay_channel`,
     `brand_id`,
     `sale_channel`,
     `create_time`,
     `update_time`
    )
    values (
     #{id,jdbcType=BIGINT},
     #{orderSn,jdbcType=VARCHAR},
     #{shippingAmount,jdbcType=BIGINT},
     #{subTotal,jdbcType=VARCHAR},
     #{discountAmount,jdbcType=VARCHAR},
     #{discountDesc,jdbcType=INTEGER},
     #{refundReason,jdbcType=VARCHAR},
     #{payMethod,jdbcType=VARCHAR},
     #{status,jdbcType=INTEGER},
     #{payChannel,jdbcType=VARCHAR},
     #{brandId,jdbcType=BIGINT},
     #{saleChannel,jdbcType=VARCHAR},
     #{createTime,jdbcType=TIMESTAMP},
     #{updateTime,jdbcType=TIMESTAMP}
 )
  </insert>
  
  
  
  <insert id="insertSelective" parameterType="com.qianwenad.model.refund.Refund" >
    insert into qw_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        `id`,
      </if>
      <if test="orderSn != null" >
        `order_sn`,
      </if>
      <if test="shippingAmount != null" >
        `shipping_amount`,
      </if>
      <if test="subTotal != null" >
        `sub_total`,
      </if>
      <if test="discountAmount != null" >
        `discount_amount`,
      </if>
      <if test="discountDesc != null" >
        `discount_desc`,
      </if>
      <if test="refundReason != null" >
        `refund_reason`,
      </if>
      <if test="payMethod != null" >
        `pay_method`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="payChannel != null" >
        `pay_channel`,
      </if>
      <if test="brandId != null" >
        `brand_id`,
      </if>
      <if test="saleChannel != null" >
        `sale_channel`,
      </if>
      <if test="createTime != null" >
        `create_time`,
      </if>
      <if test="updateTime != null" >
        `update_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null" >
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="shippingAmount != null" >
        #{shippingAmount,jdbcType=BIGINT},
      </if>
      <if test="subTotal != null" >
        #{subTotal,jdbcType=VARCHAR},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=VARCHAR},
      </if>
      <if test="discountDesc != null" >
        #{discountDesc,jdbcType=INTEGER},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=BIGINT},
      </if>
      <if test="saleChannel != null" >
        #{saleChannel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.qianwenad.model.refund.Refund" >
    update qw_refund
	  <set>
       <if test="orderSn != null" >
        `order_sn`= #{orderSn,jdbcType=VARCHAR},
       </if>
       <if test="shippingAmount != null" >
        `shipping_amount`= #{shippingAmount,jdbcType=BIGINT},
       </if>
       <if test="subTotal != null" >
        `sub_total`= #{subTotal,jdbcType=VARCHAR},
       </if>
       <if test="discountAmount != null" >
        `discount_amount`= #{discountAmount,jdbcType=VARCHAR},
       </if>
       <if test="discountDesc != null" >
        `discount_desc`= #{discountDesc,jdbcType=INTEGER},
       </if>
       <if test="refundReason != null" >
        `refund_reason`= #{refundReason,jdbcType=VARCHAR},
       </if>
       <if test="payMethod != null" >
        `pay_method`= #{payMethod,jdbcType=VARCHAR},
       </if>
       <if test="status != null" >
        `status`= #{status,jdbcType=INTEGER},
       </if>
       <if test="payChannel != null" >
        `pay_channel`= #{payChannel,jdbcType=VARCHAR},
       </if>
       <if test="brandId != null" >
        `brand_id`= #{brandId,jdbcType=BIGINT},
       </if>
       <if test="saleChannel != null" >
        `sale_channel`= #{saleChannel,jdbcType=VARCHAR},
       </if>
       <if test="createTime != null" >
        `create_time`= #{createTime,jdbcType=TIMESTAMP},
       </if>
       <if test="updateTime != null" >
        `update_time`= #{updateTime,jdbcType=TIMESTAMP},
       </if>
          </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.qianwenad.model.refund.Refund" >
    update qw_refund
    set 
       `order_sn` = #{orderSn,jdbcType=VARCHAR},
       `shipping_amount` = #{shippingAmount,jdbcType=BIGINT},
       `sub_total` = #{subTotal,jdbcType=VARCHAR},
       `discount_amount` = #{discountAmount,jdbcType=VARCHAR},
       `discount_desc` = #{discountDesc,jdbcType=INTEGER},
       `refund_reason` = #{refundReason,jdbcType=VARCHAR},
       `pay_method` = #{payMethod,jdbcType=VARCHAR},
       `status` = #{status,jdbcType=INTEGER},
       `pay_channel` = #{payChannel,jdbcType=VARCHAR},
       `brand_id` = #{brandId,jdbcType=BIGINT},
       `sale_channel` = #{saleChannel,jdbcType=VARCHAR},
       `create_time` = #{createTime,jdbcType=TIMESTAMP},
       `update_time` = #{updateTime,jdbcType=TIMESTAMP}
     where id = #{id,jdbcType=BIGINT}
  </update>
  

  
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.qianwenad.model.refund.Refund" >
    select count(*) from qw_refund
    <where >
            <if test="id != null" >
        and `id` = #{id,jdbcType=BIGINT}
      </if>
            <if test="orderSn != null" >
        and `order_sn` = #{orderSn,jdbcType=VARCHAR}
      </if>
            <if test="shippingAmount != null" >
        and `shipping_amount` = #{shippingAmount,jdbcType=BIGINT}
      </if>
            <if test="subTotal != null" >
        and `sub_total` = #{subTotal,jdbcType=VARCHAR}
      </if>
            <if test="discountAmount != null" >
        and `discount_amount` = #{discountAmount,jdbcType=VARCHAR}
      </if>
            <if test="discountDesc != null" >
        and `discount_desc` = #{discountDesc,jdbcType=INTEGER}
      </if>
            <if test="refundReason != null" >
        and `refund_reason` = #{refundReason,jdbcType=VARCHAR}
      </if>
            <if test="payMethod != null" >
        and `pay_method` = #{payMethod,jdbcType=VARCHAR}
      </if>
            <if test="status != null" >
        and `status` = #{status,jdbcType=INTEGER}
      </if>
            <if test="payChannel != null" >
        and `pay_channel` = #{payChannel,jdbcType=VARCHAR}
      </if>
            <if test="brandId != null" >
        and `brand_id` = #{brandId,jdbcType=BIGINT}
      </if>
            <if test="saleChannel != null" >
        and `sale_channel` = #{saleChannel,jdbcType=VARCHAR}
      </if>
            <if test="createTime != null" >
        and `create_time` = #{createTime,jdbcType=TIMESTAMP}
      </if>
            <if test="updateTime != null" >
        and `update_time` = #{updateTime,jdbcType=TIMESTAMP}
      </if>
          </where>
  </select>

    <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from qw_refund where 1 = 1 
        <if test="refund.id != null" >
      and `id` = #{refund.id,jdbcType=BIGINT}
    </if>
        <if test="refund.orderSn != null" >
      and `order_sn` = #{refund.orderSn,jdbcType=VARCHAR}
    </if>
        <if test="refund.shippingAmount != null" >
      and `shipping_amount` = #{refund.shippingAmount,jdbcType=BIGINT}
    </if>
        <if test="refund.subTotal != null" >
      and `sub_total` = #{refund.subTotal,jdbcType=VARCHAR}
    </if>
        <if test="refund.discountAmount != null" >
      and `discount_amount` = #{refund.discountAmount,jdbcType=VARCHAR}
    </if>
        <if test="refund.discountDesc != null" >
      and `discount_desc` = #{refund.discountDesc,jdbcType=INTEGER}
    </if>
        <if test="refund.refundReason != null" >
      and `refund_reason` = #{refund.refundReason,jdbcType=VARCHAR}
    </if>
        <if test="refund.payMethod != null" >
      and `pay_method` = #{refund.payMethod,jdbcType=VARCHAR}
    </if>
        <if test="refund.status != null" >
      and `status` = #{refund.status,jdbcType=INTEGER}
    </if>
        <if test="refund.payChannel != null" >
      and `pay_channel` = #{refund.payChannel,jdbcType=VARCHAR}
    </if>
        <if test="refund.brandId != null" >
      and `brand_id` = #{refund.brandId,jdbcType=BIGINT}
    </if>
        <if test="refund.saleChannel != null" >
      and `sale_channel` = #{refund.saleChannel,jdbcType=VARCHAR}
    </if>
        <if test="refund.createTime != null" >
      and `create_time` = #{refund.createTime,jdbcType=TIMESTAMP}
    </if>
        <if test="refund.updateTime != null" >
      and `update_time` = #{refund.updateTime,jdbcType=TIMESTAMP}
    </if>
        <if test="pageable.sort != null" >
      order by 
      <foreach collection="pageable.sort" item="order" separator="," >
        <if test="
   order.property == 'id' 
   || order.property == 'order_sn'
   || order.property == 'shipping_amount'
   || order.property == 'sub_total'
   || order.property == 'discount_amount'
   || order.property == 'discount_desc'
   || order.property == 'refund_reason'
   || order.property == 'pay_method'
   || order.property == 'status'
   || order.property == 'pay_channel'
   || order.property == 'brand_id'
   || order.property == 'sale_channel'
   || order.property == 'create_time'
   || order.property == 'update_time'
        " >
        		${order.property} ${order.direction}
        </if>
      </foreach>
    </if>
    <if test="pageable.offset >= 0 and pageable.pageSize > 0" >
      limit ${pageable.offset}, ${pageable.pageSize}
    </if>
  </select>
 </mapper>
  

  
	