<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianwenad.storage.sys.UserRoleRefRepository" >
  <resultMap id="BaseResultMap" type="com.qianwenad.model.sys.UserRoleRef" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

 <sql id="Base_Column_List" >
   `id`,
   `user_id`,
   `role_id`,
   `created_by`,
   `create_time`
 </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_role_ref
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user_role_ref
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <delete id="deleteRef" parameterType="com.qianwenad.model.sys.UserRoleRef" >
        delete from sys_user_role_ref
        <where >
            <if test="id != null" >
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null" >
                and `user_id` = #{userId,jdbcType=BIGINT}
            </if>
            <if test="roleId != null" >
                and `role_id` = #{roleId,jdbcType=BIGINT}
            </if>
            <if test="createdBy != null" >
                and `created_by` = #{createdBy,jdbcType=BIGINT}
            </if>
            <if test="createTime != null" >
                and `create_time` = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </delete>



  <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  parameterType="com.qianwenad.model.sys.UserRoleRef" >
    insert into sys_user_role_ref ( 
     `id`,
     `user_id`,
     `role_id`,
     `created_by`,
     `create_time`
    )
    values (
     #{id,jdbcType=BIGINT},
     #{userId,jdbcType=BIGINT},
     #{roleId,jdbcType=BIGINT},
     #{createdBy,jdbcType=BIGINT},
     #{createTime,jdbcType=TIMESTAMP}
 )
  </insert>
  
  
  
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="com.qianwenad.model.sys.UserRoleRef" >
    insert into sys_user_role_ref
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        `id`,
      </if>
      <if test="userId != null" >
        `user_id`,
      </if>
      <if test="roleId != null" >
        `role_id`,
      </if>
      <if test="createdBy != null" >
        `created_by`,
      </if>
      <if test="createTime != null" >
        `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.qianwenad.model.sys.UserRoleRef" >
    update sys_user_role_ref
	  <set>
       <if test="userId != null" >
        `user_id`= #{userId,jdbcType=BIGINT},
       </if>
       <if test="roleId != null" >
        `role_id`= #{roleId,jdbcType=BIGINT},
       </if>
       <if test="createdBy != null" >
        `created_by`= #{createdBy,jdbcType=BIGINT},
       </if>
       <if test="createTime != null" >
        `create_time`= #{createTime,jdbcType=TIMESTAMP},
       </if>
          </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.qianwenad.model.sys.UserRoleRef" >
    update sys_user_role_ref
    set 
       `user_id` = #{userId,jdbcType=BIGINT},
       `role_id` = #{roleId,jdbcType=BIGINT},
       `created_by` = #{createdBy,jdbcType=BIGINT},
       `create_time` = #{createTime,jdbcType=TIMESTAMP}
     where id = #{id,jdbcType=BIGINT}
  </update>
  

  
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.qianwenad.model.sys.UserRoleRef" >
    select count(*) from sys_user_role_ref
    <where >
            <if test="id != null" >
        and `id` = #{id,jdbcType=BIGINT}
      </if>
            <if test="userId != null" >
        and `user_id` = #{userId,jdbcType=BIGINT}
      </if>
            <if test="roleId != null" >
        and `role_id` = #{roleId,jdbcType=BIGINT}
      </if>
            <if test="createdBy != null" >
        and `created_by` = #{createdBy,jdbcType=BIGINT}
      </if>
            <if test="createTime != null" >
        and `create_time` = #{createTime,jdbcType=TIMESTAMP}
      </if>
          </where>
  </select>

    <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_role_ref where 1 = 1 
        <if test="userRoleRef.id != null" >
      and `id` = #{userRoleRef.id,jdbcType=BIGINT}
    </if>
        <if test="userRoleRef.userId != null" >
      and `user_id` = #{userRoleRef.userId,jdbcType=BIGINT}
    </if>
        <if test="userRoleRef.roleId != null" >
      and `role_id` = #{userRoleRef.roleId,jdbcType=BIGINT}
    </if>
        <if test="userRoleRef.createdBy != null" >
      and `created_by` = #{userRoleRef.createdBy,jdbcType=BIGINT}
    </if>
        <if test="userRoleRef.createTime != null" >
      and `create_time` = #{userRoleRef.createTime,jdbcType=TIMESTAMP}
    </if>
        <if test="pageable.sort != null" >
      order by 
      <foreach collection="pageable.sort" item="order" separator="," >
        <if test="
   order.property == 'id' 
   || order.property == 'user_id'
   || order.property == 'role_id'
   || order.property == 'created_by'
   || order.property == 'create_time'
        " >
        		${order.property} ${order.direction}
        </if>
      </foreach>
    </if>
    <if test="pageable.offset >= 0 and pageable.pageSize > 0" >
      limit ${pageable.offset}, ${pageable.pageSize}
    </if>
  </select>
 </mapper>
  

  
	